imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BookBundle/Resources/config/services.xml" }
    - { resource: "@ApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    jms_serializer.infer_types_from_doctrine_metadata: true

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


# FOS REST Bundle Configuration:
fos_rest:
    body_listener: true

    # Param fetcher is a helper to validate parameters of the active request, with the listener enabled you can use
    # ParamFetcher to fetch stuff from query or request and will pass on validations
    param_fetcher_listener: 'force'

    access_denied_listener:
        # all requests using the 'json' format will return a 403 on an access denied violation
        json: true

    format_listener:
        rules:
            - { path: ^/api, priorities: ['json'], fallback_format: json, prefer_extension: false}
            - { path: '^/static', priorities: ['html'], fallback_format: 'html', prefer_extension: false }
    serializer:
        # Serialize null values inside data
        # return array('t' => 1, 's' => null);
        # false: {"t":1}
        # true: {"t":1,"s":null}
        serialize_null: true

    view:
        # If you use 'force' instead:
        # https://github.com/FriendsOfSymfony/FOSRestBundle/blob/master/Resources/doc/3-listener-support.md#view-response-listener
        # makes possible to simple return an View or array, and it is converted into a response
        view_response_listener: force

        # https://github.com/FriendsOfSymfony/FOSRestBundle/issues/459
        # The setting is not about serializing null values inside data, but rather serializing empty data at all.
        # If you turn this in true a return null will be serialized and content returned, so no 204 but 200 instead
        serialize_null: false

        formats:
            json: true
            xml: true

        templating_formats:
            html: true

        default_engine: twig
        force_redirects:
            json: true

        # View exceptions
        failed_validation: HTTP_BAD_REQUEST
        empty_content: HTTP_NO_CONTENT

sensio_framework_extra:
    view:    { annotations: false }

# Serializer Configuration:
jms_serializer:
    visitors:
        json:
            options: JSON_UNESCAPED_SLASHES